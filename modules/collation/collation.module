<?php

/**
 * @file
 * Defines all the hooks this module implements.
 */

/**
 * Implements hook_menu().
 */
function collation_menu() {
  return array(
    'collation/contextual-links/collation/%islandora_object' => array(
      'title' => 'Collations',
      'page callback' => TRUE,
      'access callback' => TRUE,
    ),
    'collation/contextual-links/collation/%islandora_object/add' => array(
      'title' => 'Add New Collation',
      'file' => 'includes/mvd.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('emicdora_mvd_form', 3),
      'access callback' => 'islandora_object_access_callback',
      'access arguments' => array(ISLANDORA_METADATA_EDIT, 3),
      'type' => MENU_LOCAL_TASK,
      'context' => MENU_CONTEXT_INLINE,
    ),
    'islandora/emic/collation' => array(
      'title' => 'Collation',
      'page callback' => 'emicdora_mvd_crud',
      'type' => MENU_CALLBACK,
      // @TODO: Make a real, split out permission for this once the enigmatic
      // emicdora function is decoded.
      'access callback' => TRUE,
      'file' => 'includes/mvd.inc',
    ),
    'islandora/object/%islandora_object/compare' => array(
      'title' => 'Collations',
      'context' => MENU_CONTEXT_PAGE,
      'page callback' => 'emicdora_compare_view',
      'file' => 'includes/collation_view.inc',
      'page arguments' => array(2),
      'access callback' => 'islandora_object_access_callback',
      'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 2),
    ),
    'islandora/object/%islandora_object/table' => array(
      'title' => 'Collations',
      'context' => MENU_CONTEXT_PAGE,
      'page callback' => 'emicdora_table_view',
      'file' => 'includes/collation_view.inc',
      'page arguments' => array(2),
      'access callback' => 'islandora_object_access_callback',
      'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 2),
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function collation_islandora_required_objects(IslandoraTuque $connection) {
  module_load_include('inc', 'emicdora', 'includes/utilities');
  $module_path = drupal_get_path('module', 'collation');
  // Critical Edition Content Model.
  $collation_content_model = emicdora_create_required_object($connection, array(
    'pid' => 'islandora:collationCModel',
    'label' => 'Collation Content Model',
    'model' => 'fedora-system:ContentModel-3.0',
    'datastreams' => array(
      'DS-COMPOSITE-MODEL' => array(
        'file' => "$module_path/data/objects/collation_ds_composite_model.xml",
      ),
    ),
  ));
  return array(
    'collation' => array(
      'title' => 'EMiC (Editing Modernism in Canada) - Collations',
      'objects' => array(
        $collation_content_model,
      ),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function collation_block_info() {
  return array(
    'collations' => array(
      'info' => t('Collations'),
      'cache' => DRUPAL_NO_CACHE,
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'pages' => 'islandora/object/*',
      'weight' => -20,
      'status' => 1,
      'region' => 'sidebar_first',
    ),
  );
}

/**
 * Implements hook_block_configure().
 */
function collation_block_configure($delta = '') {
  $form = array();
  switch ($delta) {
    case 'collations':
      $form['emicdora_collation_block_count'] = array(
        '#type' => 'select',
        '#title' => t('Number of collations to display'),
        '#default_value' => variable_get('emicdora_collation_block_count', 10),
        '#options' => drupal_map_assoc(array(5, 10, 15, 20, 25, 30)),
      );
  }
  return $form;
}

/**
 * Implements hook_block_view().
 */
function collation_block_view($delta = '') {
  module_load_include('inc', 'collation', 'includes/utilities');
  module_load_include('inc', 'emicdora', 'includes/utilities');
  $object = menu_get_object('islandora_object', 2);
  if (is_object($object) && emicdora_has_content_model($object, 'islandora:criticalEditionContainerCModel')) {
    $critical_edition = $object;
  }
  elseif (is_object($object) && emicdora_has_content_model($object, 'islandora:versionCModel')) {
    $parents = $object->relationships->get(FEDORA_RELS_EXT_URI, 'isMemberOf');
    $critical_edition = islandora_object_load($parents[0]['object']['value']);
  }

  if (!isset($critical_edition)) {
    return array();
  }
  // Build the block uses paths relative to our current path.
  $block = array();
  switch ($delta) {

    case 'collations':
      module_load_include('inc', 'collation', 'includes/calliope');
      $mvds = emicdora_calliope_find_mvds($critical_edition);
      $links = array();
      foreach ($mvds as $mvd) {
        $links[] = array(
          'title' => $mvd['name'],
          'href' => "islandora/object/{$critical_edition->id}/compare/{$mvd['name']}",
          'fragment' => "{$mvd['name']}/{$critical_edition->id}",
        );
      }
      $block['subject'] = t('Collations');
      $block['content'] = array(
        '#theme' => 'links',
        '#links' => $links,
        '#contextual_links' => array(
          'emicdora' => array(
            'collation/contextual-links/collation',
            array($critical_edition->id),
          ),
        ),
      );

      break;
  }
  return $block;
}

/**
 * Implements hook_form_alter().
 */
function collation_form_emicdora_admin_settings_form_alter(&$form, &$form_state) {
  $form['repository'] = array(
    '#type' => 'fieldset',
    '#title' => 'Mongo Configuration',
    '#collapsed' => FALSE,
    '#collapsible' => TRUE,
  );

  $form['repository']['emicdora_mongo_port'] = array(
    '#type' => 'textfield',
    '#title' => t("Port"),
    '#description' => t("Mongo Database Port"),
    '#default_value' => variable_get('emicdora_mongo_port', "27017"),
  );
  $form['repository']['emicdora_mongo_host'] = array(
    '#type' => 'textfield',
    '#title' => t("Address"),
    '#description' => t("Mongo Database server address"),
    '#default_value' => variable_get('emicdora_mongo_host', "localhost"),
  );
  $form['repository']['emicdora_mongo_db'] = array(
    '#type' => 'textfield',
    '#title' => t("Database name"),
    '#description' => t("Mongo Database instance name"),
    '#default_value' => variable_get('emicdora_mongo_db', "test"),
  );
}

/**
 * Implements hook_theme().
 */
function collation_theme() {
  return array(
    'collation_compare' => array(
      'template' => 'theme/collation_compare',
      'file' => 'theme/theme.inc',
      'variables' => array('left' => NULL, 'right' => NULL),
    ),
  );
}
